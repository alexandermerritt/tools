#! /usr/bin/env python2.7
# Convert /proc/*/smaps to a machine-readable format.
# Usage: ./maps < /proc/*/smaps

import sys
import re
import time

# make sure order matches in /proc/*/smaps after a line starting with address
items = ['sz', 'rss', 'pss', 'sc',
         'sd', 'pc', 'pd', 'ref',
         'anon', 'anonhg', 'swap',
         'kernpgsz', 'mmupgsz']

addr_re  = re.compile('^([0-9a-f]+)-([0-9a-f]+)')
field_re = re.compile('^([A-Za-z_]*):\W+([0-9]+)\W+([a-z])B')

def parse_line(line):
    if addr_re.match(line): # e.g. line = '00400000-00408000 r-xp 00000000 08:02 31709 /usr/bin/head'
        sys.stdout.write('\n' + str(time.time()))
        items = addr_re.split(line)[1:3]
        items.extend(line.split()[1:])
        if len(items) == 6: # add missing 'name' field
            items.append('(na)')
        sys.stdout.write(' ' + ' '.join(items))
    else: # e.g. line = 'Shared_Clean:          0 kB'
        field_re.split(line)
        (name,value,unit) = field_re.split(line)[1:4]
        sys.stdout.write(' ' + value)

def show_header():
    head = ['time', 'start', 'end', 'perms', 'offset', 'dev', 'inode', 'name']
    head.extend(items)
    print(' '.join(head))

def go():
    line = sys.stdin.readline()
    while line:
        line = line.rstrip()
        parse_line(line)
        line = sys.stdin.readline()

def usage():
    print('Usage: ./smaps < /proc/*/smaps')
    print('       ./smaps head')

# --- Start here ---

if len(sys.argv) > 2:
    usage()
    sys.exit(1)
elif len(sys.argv) == 2:
    if sys.argv[1] == 'head':
        show_header()
        sys.exit(0)
    else:
        usage()
        sys.exit(1)
else:
    go()

